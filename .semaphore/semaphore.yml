version: v1.0
name: BackerKit Clone Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

blocks:
  - name: "Setup"
    task:
      jobs:
        - name: Bundle Install and Cache
          commands:
            - checkout
            - sem-version ruby 3.3.1
            - cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH,gems-main
            - bundle install --path vendor/bundle
            - cache store gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock) vendor/bundle

  - name: "Code Quality"
    task:
      prologue:
        commands:
          - checkout
          - sem-version ruby 3.3.1
          - cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH,gems-main
          - bundle install --path vendor/bundle
      jobs:
        - name: Rubocop
          commands:
            - bundle exec rubocop --fail-level error

  - name: "Unit & Model Tests"
    task:
      prologue:
        commands:
          - checkout
          - sem-version ruby 3.3.1
          - cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH,gems-main
          - bundle install --path vendor/bundle
          - sem-service start postgres
          - cp config/database.semaphore.yml config/database.yml
          - RAILS_ENV=test bundle exec rake db:create db:schema:load
          - RAILS_ENV=test bundle exec rake db:seed
          # Precompile assets for test environment to avoid Tailwind CSS issues
          - RAILS_ENV=test bundle exec rake assets:precompile
          # Create test reports directory
          - mkdir -p tmp/test-results/rspec
      jobs:
        - name: RSpec Tests (Non-System)
          commands:
            - RAILS_ENV=test bundle exec rspec --exclude-pattern "spec/system/**/*_spec.rb" --format progress --format RspecJunitFormatter --out tmp/test-results/rspec/results.xml
          env_vars:
            - name: SEMAPHORE_TEST_RESULTS_PATH
              value: tmp/test-results/

  - name: "System Tests"
    task:
      prologue:
        commands:
          - checkout
          - sem-version ruby 3.3.1
          - cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH,gems-main
          - bundle install --path vendor/bundle
          - sem-service start postgres
          - cp config/database.semaphore.yml config/database.yml
          - RAILS_ENV=test bundle exec rake db:create db:schema:load
          - RAILS_ENV=test bundle exec rake db:seed
          # Precompile assets for test environment
          - RAILS_ENV=test bundle exec rake assets:precompile
          # Create test reports directory for system tests
          - mkdir -p tmp/test-results/system
          # Install specific chrome version
          - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          - sudo apt-get update
          - sudo apt install -y ./google-chrome-stable_current_amd64.deb
          - google-chrome --version
      jobs:
        - name: System Tests
          commands:
            # This job is allowed to fail without breaking the pipeline
            - RAILS_ENV=test WEBDRIVER_CHROME_VERSION=114.0.5735.90 HEADLESS=true bundle exec rspec spec/system --format progress --format RspecJunitFormatter --out tmp/test-results/system/results.xml || echo "System tests failed but pipeline continues"
          env_vars:
            - name: SEMAPHORE_TEST_RESULTS_PATH
              value: tmp/test-results/
            - name: SKIP_SYSTEM_TESTS_ON_FAIL
              value: "true"

  - name: "Asset Precompilation Check"
    task:
      prologue:
        commands:
          - checkout
          - sem-version ruby 3.3.1
          - cache restore gems-$SEMAPHORE_GIT_BRANCH-$(checksum Gemfile.lock),gems-$SEMAPHORE_GIT_BRANCH,gems-main
          - bundle install --path vendor/bundle
      jobs:
        - name: Assets Precompile
          commands:
            - bundle exec rake assets:precompile

promotions:
  - name: Deploy to Heroku
    pipeline_file: deploy-heroku.yml
    auto_promote:
      when: branch = 'main' AND result = 'passed'
